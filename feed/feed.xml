<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet href="pretty-atom-feed.xsl" type="text/xsl"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
  <title>Fontra Blog</title>
  <subtitle>Posting about Fontra development.</subtitle>
  <link href="https://blog.fontra.xyz/feed/feed.xml" rel="self" />
  <link href="https://blog.fontra.xyz/" />
  <updated>2025-04-01T00:00:00Z</updated>
  <id>https://blog.fontra.xyz/</id>
  <author>
    <name>Fontra Team</name>
  </author>
  <entry>
    <title>Fontra news for March</title>
    <link href="https://blog.fontra.xyz/blog/march-update/" />
    <updated>2025-04-01T00:00:00Z</updated>
    <id>https://blog.fontra.xyz/blog/march-update/</id>
    <content type="html">&lt;p&gt;We welcomed a sizable set of new features and improvements this month:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Global source locations&lt;/li&gt;
&lt;li&gt;Background layers&lt;/li&gt;
&lt;li&gt;OpenType settings UI&lt;/li&gt;
&lt;li&gt;OpenType feature editor&lt;/li&gt;
&lt;li&gt;Glyphs backend changes for writing&lt;/li&gt;
&lt;li&gt;Improved backend/frontend separation&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;global-source-locations&quot;&gt;Global source locations&lt;/h3&gt;
&lt;p&gt;This set of features has been in the works for a very long time (at least a year), and deserves a bit more explanation.&lt;/p&gt;
&lt;p&gt;Fontra allows glyphs to have as many or few sources at different locations within the design space. This is not limited or enforced by global settings, apart from the definition of variation axes. Until now, this information belonged solely to the glyph. While this is flexible for the glyph, this becomes problematic if global aspects of the design space change after glyphs have been constructed. For example, when the range of an axis needs changing.&lt;/p&gt;
&lt;p&gt;We have had the concept of “font sources” for a while. A “font source” has a location in the designspace, and is used as a place to hold information specific to that location. This is where vertical metrics (cap height, x-height, ascender, descender) are managed, global guidelines, and more. So these locations are considered important within the project.&lt;/p&gt;
&lt;p&gt;Commonly, one wants to draw glyph sources as well at (some of) these locations. We have introduced the concept of a “location base”, with which a &lt;em&gt;glyph source&lt;/em&gt; can reference a &lt;em&gt;global font source&lt;/em&gt;. A glyph source that uses this does not define its own location in design space, but refers to a global font source. This means that we can now change the location of all glyphs that reference a specific font source by editing the referenced font source.&lt;/p&gt;
&lt;p&gt;Additionally, this gave us the opportunity to improve the user experience when drawing variable glyphs. Previously, for each glyph, each desired source had to be created explicity. For example, if you wanted to draw a Bold variant for a glyph, the user would have to navigate to the desired Bold location, and then create the Bold source with a button click and a dialog confirmation before they could make the Bold outline. Now you can do it with a single click.&lt;/p&gt;
&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://blog.fontra.xyz/blog/march-update/7u17yekD0t-2032.avif 2032w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://blog.fontra.xyz/blog/march-update/7u17yekD0t-2032.webp 2032w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://blog.fontra.xyz/blog/march-update/7u17yekD0t-2032.png&quot; alt=&quot;A Screenshot of the designspace navigation panel, showing the improved source list and the new source layers list&quot; width=&quot;2032&quot; height=&quot;1770&quot;&gt;&lt;/picture&gt;
&lt;p&gt;We have improved the UI for the glyph sources list in a couple of ways:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Global locations for which the glyph does not yet have a source is shown in the list, rendered in gray so the user sees “this location does not yet have a drawing”.&lt;/li&gt;
&lt;li&gt;After selecting such a source, the user can immediately manipulate the outline for that location. This implicitly creates the glyph source, and saves a lot of clicks when designing a variable glyph.&lt;/li&gt;
&lt;li&gt;A new source always starts with an interpolation. For example, if Regular and Bold sources already exist, but not yet a Medium source, going to the Medium source (provided it is defined as a font source) allows the user to instantly refine the shape at the Medium location.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Summarizing, this new feature brings two great improvements:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;After setting up the global sources, it becomes much much easier to populate the sources for variable glyphs.&lt;/li&gt;
&lt;li&gt;The locations for glyph sources &lt;em&gt;that use the location base feature&lt;/em&gt; can be edited globally. &lt;em&gt;(Note that it is still possible to create sources that store their location strictly locally)&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;background-layers-aka-source-layers&quot;&gt;Background layers, aka. “Source layers”&lt;/h3&gt;
&lt;p&gt;Fontra finally has a background layers feature. This took a fair amount of effort to implement, and this checks off a much-requested and needed feature from our list. Users can now create arbitrary additional layers to paste variations or sketch work or reference shapes.&lt;/p&gt;
&lt;p&gt;In addition to “background layers” we also call them “source layers”, as each background layer belongs to a glyph source. Reminder: a glyph source specifies a location in the design space.&lt;/p&gt;
&lt;p&gt;The screenshot in the previous section also shows the new “Source layers” list.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.fontra.xyz/reference/editor-view/panels/designspace&quot;&gt;Documentation about source layers&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;opentype-settings-ui&quot;&gt;OpenType settings UI&lt;/h3&gt;
&lt;p&gt;The Font info panel and the font sources panel have been enhanced with UI to add specific lower level OpenType-related settings data, so that users can tune details of the output of binary font files. Examples include settings for the &lt;code&gt;hhea&lt;/code&gt;, &lt;code&gt;vhea&lt;/code&gt;, and &lt;code&gt;OS/2&lt;/code&gt; tables.&lt;/p&gt;
&lt;h3 id=&quot;opentype-feature-editor&quot;&gt;OpenType feature editor&lt;/h3&gt;
&lt;p&gt;We added a new panel in the Font info view to edit OpenType feature source code. We integrated a powerful open source code editor component called &lt;a href=&quot;https://codemirror.net/&quot;&gt;CodeMirror&lt;/a&gt;. In the future, this can be enhanced with more refined code completion and syntax highlighting.&lt;/p&gt;
&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://blog.fontra.xyz/blog/march-update/oMepkt9rZg-2426.avif 2426w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://blog.fontra.xyz/blog/march-update/oMepkt9rZg-2426.webp 2426w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://blog.fontra.xyz/blog/march-update/oMepkt9rZg-2426.png&quot; alt=&quot;A Screenshot of the OpenType featurers panel&quot; width=&quot;2426&quot; height=&quot;1752&quot;&gt;&lt;/picture&gt;
&lt;h3 id=&quot;glyphs-backend-changes-for-writing&quot;&gt;Glyphs backend changes for writing&lt;/h3&gt;
&lt;p&gt;Our backend for reading &lt;code&gt;.glyphs&lt;/code&gt; and &lt;code&gt;.glyphpackage&lt;/code&gt; files has been upgraded to also &lt;em&gt;write&lt;/em&gt;. This is a work in progress that is being rolled out in phases. We have completed the first major step, which adds editing and creation of basic glyph data, including editing and creating of background layers. We cannot yet create a .glyphs file from scratch, but we find this a very exciting start.&lt;/p&gt;
&lt;p&gt;So, to emphasize and repeat, &lt;em&gt;you can now open your &lt;code&gt;.glyphs&lt;/code&gt; and &lt;code&gt;.glyphpackage&lt;/code&gt; files directly in Fontra Pak and start editing glyphs and start creating new glyphs!&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&quot;improved-backend-frontend-separation-aka-the-js-split-big-bang-operation&quot;&gt;Improved backend/frontend separation, aka. the “JS-split” Big-Bang operation&lt;/h3&gt;
&lt;p&gt;Simon Cozens proposed and then implemented a major refactoring in how our server code and front end code is organized, and improved the documentation for how they interoperate. The initial purpose of this is to allow him to experiment with a server-less version of Fontra. Additionally, it improved the code base generally by modernizing the project to use a bundler for JavaScript (and other language) resources. It did make our build somewhat more complex, especially with out-of-tree front end extensions such as fontra-rcjk. We managed to keep breakage to a minimum, but as expected we did experience some fallout in the form of minor regressions, that have since been fixed.&lt;/p&gt;
&lt;h3 id=&quot;menu-bar-improvements&quot;&gt;Menu bar improvements&lt;/h3&gt;
&lt;p&gt;We received excellent contributions from Johannes Abendroth, who (among other things) vastly improved the menu bar and menu panel’s keyboard navigation functionality.&lt;/p&gt;
&lt;h3 id=&quot;documentation&quot;&gt;Documentation&lt;/h3&gt;
&lt;p&gt;There have been many content updates to our &lt;a href=&quot;https://docs.fontra.xyz/&quot;&gt;user documentation website&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We would love to receive suggestions, additions and improvements from the community, and encourage anyone (you?) to participate in &lt;a href=&quot;https://github.com/fontra/fontra-docs&quot;&gt;the documentation repository&lt;/a&gt;. Documentation is hard, and we need your help.&lt;/p&gt;
&lt;h3 id=&quot;next-up&quot;&gt;Next up&lt;/h3&gt;
&lt;p&gt;The biggest and highest priority item on our TODO list is currently to add functionality to author and edit kerning. You can imagine that’s going to be a fairly big one. We plan to land it in April, though. This is the last significant step before we will call Fontra &amp;quot;1.0&amp;quot;.&lt;/p&gt;
&lt;h3 id=&quot;concluding&quot;&gt;Concluding&lt;/h3&gt;
&lt;p&gt;March was a very productive month, where we met almost all of our goals. As always, please check the &lt;a href=&quot;https://fontra.xyz/changelog.html&quot;&gt;changelog&lt;/a&gt; for a more detailed list of changes.&lt;/p&gt;
&lt;p&gt;Be sure to check out Fontra’s progress by downloading a fresh version of &lt;a href=&quot;https://fontra-download.black-foundry.com/FontraPak.dmg&quot;&gt;Fontra Pak for macOS&lt;/a&gt; or &lt;a href=&quot;https://fontra-download.black-foundry.com/FontraPak.zip&quot;&gt;Fontra Pak for Windows&lt;/a&gt;, or check out the &lt;a href=&quot;https://github.com/fontra/fontra-pak&quot;&gt;source code for Fontra Pak&lt;/a&gt; if you’d like to run it on other platforms.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Fontra news for February</title>
    <link href="https://blog.fontra.xyz/blog/february-update/" />
    <updated>2025-02-28T00:00:00Z</updated>
    <id>https://blog.fontra.xyz/blog/february-update/</id>
    <content type="html">&lt;p&gt;This month, Jérémie, Gaëtan and Just took a trip to Nancy (France), to participate in the &lt;a href=&quot;https://automatic-type-design.anrt-nancy.fr/colloques/automatic-type-design-3&quot;&gt;Automatic Type Design symposium&lt;/a&gt; organized by &lt;a href=&quot;https://anrt-nancy.fr/en&quot;&gt;ANRT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We led two one-day Fontra workshops, each with about 20 participants, using our internal collaborative Fontra server. The participants were a mix of international students and professionals, with very diverse backgrounds. They got to learn the basics of creating variable fonts with Fontra, while working collaborative in small groups. We especially encouraged them to use variable components.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Some experimental letterforms created in Fontra, by a group of workshop participants:&lt;/em&gt;
&lt;picture&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://blog.fontra.xyz/blog/february-update/ARWytyJKYV-800.webp 800w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://blog.fontra.xyz/blog/february-update/ARWytyJKYV-800.gif&quot; alt=&quot;Screen recording of moving letterforms&quot; width=&quot;800&quot; height=&quot;672&quot;&gt;&lt;/picture&gt;&lt;/p&gt;
&lt;p&gt;The following two days were packed with very inspriring talks. Several talks focussed on algorithmic type design, and/or experimental approaches to drawing digital letters.&lt;/p&gt;
&lt;p&gt;The last day of the symposium was dedicated to a series of demos. We got to do a compact Fontra demo, where we talked about the ideas behind Fontra, and showcased the core set of features. We were happy to answer some good questions from the audience.&lt;/p&gt;
&lt;div id=&quot;yiupIidTw4I&quot; class=&quot;eleventy-plugin-youtube-embed&quot; style=&quot;position:relative;width:100%;padding-top: 56.25%;&quot;&gt;&lt;iframe style=&quot;position:absolute;top:0;right:0;bottom:0;left:0;width:100%;height:100%;&quot; width=&quot;100%&quot; height=&quot;100%&quot; frameborder=&quot;0&quot; title=&quot;Embedded YouTube video&quot; src=&quot;https://www.youtube-nocookie.com/embed/yiupIidTw4I&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;
&lt;h3 id=&quot;updates&quot;&gt;Updates&lt;/h3&gt;
&lt;p&gt;We added initial support for global guidelines. Previously, Fontra only supported per-glyph guidelines. If set up consistently, global guidelines can interpolate across the font&#39;s designspace, just like glyph-level guidelines.&lt;/p&gt;
&lt;p&gt;The font sources panel got a redesign: the old design was too hard to extend. This was partially motivated by the new global guidelines feature.&lt;/p&gt;
&lt;p&gt;In addition to .ttf and .otf, Fontra can now read the .woff and .woff2 formats, for convenient inspection of such font files, or for conversion to an editable format.&lt;/p&gt;
&lt;p&gt;Many smaller bugs and user-experience issues were fixed. For a complete list, please have a look at the &lt;a href=&quot;https://fontra.xyz/changelog.html&quot;&gt;list of recent changes&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;work-in-progress&quot;&gt;Work In Progress&lt;/h3&gt;
&lt;p&gt;There was a lot of development in several work-in-progress features.&lt;/p&gt;
&lt;p&gt;We are working on making Fontra able to edit .glyphs and .glyphpackage files. This is a multi-stage project, where we initially focus on editing glyph-level data: outlines and (variable/smart) components. This work is nearly completed, and we expect it to land next week.&lt;/p&gt;
&lt;p&gt;Background layers (or &lt;em&gt;scratch/sketch&lt;/em&gt; layers) is a much-requested feature, which is developing nicely, and is expected to land soon, too.&lt;/p&gt;
&lt;p&gt;Work is being done to expose more advanced font info data, such as various lower level line metrics data and other font-level info, so users can control these fields when exporting to .ttf or .otf. This set of features was also an important motivation for the redesign of the font sources panel.&lt;/p&gt;
&lt;p&gt;As mentioned last month, Simon Cozens is working on changes to the front-end code to make a server-less version of Fontra possible. It includes setting up a &lt;em&gt;bundler&lt;/em&gt; (webpack in our case), and makes a much clearer separation between our server code and the front-end code and assets. This work is nearing completion and will be merged very soon. It is a tricky operation as it moves and touches a &lt;em&gt;lot&lt;/em&gt; of files, and this can get in the way of other work-in-progress if we&#39;re not careful.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Fontra news for January – Font Overview</title>
    <link href="https://blog.fontra.xyz/blog/font-overview/" />
    <updated>2025-01-30T00:00:00Z</updated>
    <id>https://blog.fontra.xyz/blog/font-overview/</id>
    <content type="html">&lt;p&gt;This month&#39;s big news is that we finally have a font overview.&lt;/p&gt;
&lt;p&gt;We fixed many bugs and implemented many small improvements. The full human-curated list of changes can be found &lt;a href=&quot;https://fontra.xyz/changelog.html&quot;&gt;here&lt;/a&gt;, Even more details can be found on &lt;a href=&quot;https://github.com/fontra/fontra&quot;&gt;our main GitHub repository&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;font-overview&quot;&gt;Font overview&lt;/h3&gt;
&lt;p&gt;A font overview is an essential component for a font editor, especially when it comes to designing a full Latin typeface of any other script that has a relatively small number of glyphs (say less than 5000).&lt;/p&gt;
&lt;p&gt;Fontra’s development was initially guided by Black Foundry’s needs for big CJK projects, in which character sets are managed separately. A font overview wasn’t an immediate priority. But now that we have achieved most of the essential parts for CJK font design, we are able to move forward and improve Fontra for broader font development.&lt;/p&gt;
&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://blog.fontra.xyz/blog/font-overview/8otm50hGBH-2608.avif 2608w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://blog.fontra.xyz/blog/font-overview/8otm50hGBH-2608.webp 2608w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://blog.fontra.xyz/blog/font-overview/8otm50hGBH-2608.png&quot; alt=&quot;Screenshot of Fontra&#39;s Font Overview&quot; width=&quot;2608&quot; height=&quot;1754&quot;&gt;&lt;/picture&gt;
&lt;p&gt;When opening or creating a font with Fontra, the default view is now the font overview. Double-clicking glyphs in the overview leads the user to an editor view.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Pro tip: one can open multiple tabs or windows for the same font, by copying the URL into a new tab or window. It is possible to have multiple font overviews or glyph editors open for the same font.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The left sidebar contains several user interface elements to help viewing the glyphs in the font in an organized way. For example, one can group the glyphs by script. The sections in the overview are collapsable. Alt-click on a section header collapses all sections. Or expands all, if all are collapsed.&lt;/p&gt;
&lt;p&gt;Glyph &lt;em&gt;filtering&lt;/em&gt; is still somewhat limited: while you can quickly filter by glyph name in the search box, we anticipate additional filtering options in the future. We notice that early adopters are enthusiastically proposing additional features.&lt;/p&gt;
&lt;p&gt;The documentation for the font overview &lt;a href=&quot;https://docs.fontra.xyz/reference/font-overview/workspace/&quot;&gt;is being written&lt;/a&gt;, and will be enhanced.&lt;/p&gt;
&lt;p&gt;In general, the options provide a &amp;quot;view&amp;quot; on the font&#39;s collection of glyphs. Changing the options does not change anything about the font itself, just &lt;em&gt;how we look at it&lt;/em&gt;.&lt;/p&gt;
&lt;h3 id=&quot;glyph-sets&quot;&gt;Glyph sets&lt;/h3&gt;
&lt;p&gt;A &amp;quot;Glyph set&amp;quot; is a collection of glyphs, which is &lt;em&gt;independent&lt;/em&gt; from the glyphs that are defined in the font. A glyph can be defined in the glyph set, but not in the font or vice versa. Glyphs in the set that do not exist in the font are represented as &amp;quot;placeholder&amp;quot; glyphs in overview, showing a generic character in gray if the code point exists.&lt;/p&gt;
&lt;p&gt;In the left sidebar, there are two sections about glyph sets:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;quot;Project glyph sets&amp;quot;: belong to the font, and are stored with the font data.&lt;/li&gt;
&lt;li&gt;&amp;quot;My glyph sets&amp;quot;: belong to the user, and are stored locally in the browser.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &amp;quot;Project glyph sets&amp;quot; contains one special glyph set &amp;quot;This font&#39;s glyphs&amp;quot;, that represents the glyphs that exist in the font, and nothing more.&lt;/p&gt;
&lt;p&gt;Selecting multiple glyph sets shows the &lt;em&gt;superset&lt;/em&gt; of all selected sets.&lt;/p&gt;
&lt;p&gt;Glyphs sets are stored purely by references to online resources. A glyph set can reference any publicly visible text file containing glyph names, or a TSV/CSV file, containing code point and/or glyph name columns. Links to Google Docs or Google Sheets are internally converted to .txt or .csv download links, respectively.&lt;/p&gt;
&lt;p&gt;We are considering supporting uploading of local files in the future, but for now consider this a pilot, where we encourage people strongly to use (and create) online glyph set resources.&lt;/p&gt;
&lt;p&gt;The currently bundled preset glyph sets collections are from Google Fonts, Black Foundry, Adobe and Christoph Koeberlin. We are &lt;a href=&quot;https://github.com/fontra/fontra/discussions/1943&quot;&gt;open to suggestions&lt;/a&gt; for more preset glyph sets.&lt;/p&gt;
&lt;p&gt;To add one or more glyph sets to either section, use the &amp;quot;+&amp;quot; button. This leads to a dialog where you can either activate any of the preset glyph sets, or add a custom glyph set.&lt;/p&gt;
&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://blog.fontra.xyz/blog/font-overview/rYFmRkAxDQ-1896.avif 1896w&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://blog.fontra.xyz/blog/font-overview/rYFmRkAxDQ-1896.webp 1896w&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://blog.fontra.xyz/blog/font-overview/rYFmRkAxDQ-1896.png&quot; alt=&quot;Screenshot of the Fontra Add/remove preset glyph sets dialog&quot; width=&quot;1896&quot; height=&quot;1280&quot;&gt;&lt;/picture&gt;
&lt;h3 id=&quot;custom-glyph-sets&quot;&gt;Custom glyph sets&lt;/h3&gt;
&lt;p&gt;To create a custom glyph set, click the &amp;quot;Add custom glyph set&amp;quot; button in the above dialog. This leads to a different dialog, where the user can specify the parameters for a custom glyph set.&lt;/p&gt;
&lt;p&gt;We currently support two formats:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A text file containing white-space separated glyph names
&lt;ul&gt;
&lt;li&gt;Code points are inferred from the glyph name&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;A tab-, comma-, or semicolon-separated text file (.tsv or .csv) with at least one column
&lt;ul&gt;
&lt;li&gt;Optionally a header row: the first non-empty, non-comment row&lt;/li&gt;
&lt;li&gt;A column can be specified by header cell or by zero-based column index&lt;/li&gt;
&lt;li&gt;The code point column can contain decimal or hexadecimal code points.&lt;/li&gt;
&lt;li&gt;Hexadecimal code points may be prefixed by &lt;code&gt;0x&lt;/code&gt; or &lt;code&gt;U+&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;If there is no code point, a code point will be inferred from the glyph name&lt;/li&gt;
&lt;li&gt;If there is no glyph name, a glyph name will be inferred from the code point&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Additional info for both formats:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For now, code point and glyph name &amp;quot;guessing&amp;quot; is done according to the Glyphs app naming convention, and will additionally parse &lt;code&gt;uni1234&lt;/code&gt;-style and &lt;code&gt;u12345&lt;/code&gt;-style names.&lt;/li&gt;
&lt;li&gt;Both formats support an optional comment character for comment-until-the-end-of-the-line-style comments.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;font-overview-further-development&quot;&gt;Font overview further development&lt;/h3&gt;
&lt;p&gt;In the future, it will be possible to copy/paste glyphs in the font overview, as well as to create and delete glyphs.&lt;/p&gt;
&lt;h3 id=&quot;serverless-fontra&quot;&gt;Serverless Fontra&lt;/h3&gt;
&lt;p&gt;In other news, Simon Cozens is experimenting with a so called &amp;quot;serverless&amp;quot; version of Fontra, that runs entirely in the browser. This is leading to some refactoring of our frontend code, that will be generally beneficial to the project. It makes some of Fontra&#39;s &lt;em&gt;intended&lt;/em&gt; modularity more &lt;em&gt;practically&lt;/em&gt; modular.&lt;/p&gt;
&lt;p&gt;We are very excited by these new possibilities, and we would like to point out that this &lt;em&gt;diversifies&lt;/em&gt; Fontra&#39;s deployment options even more. It is not intended as a replacement of Fontra&#39;s already varied set of deployment options. As a quick reminder: There is Fontra Pak (our desktop application), but Fontra can also be run from the command line in a Terminal program. Additionally we have an SQL-based shared storage solution. A new collaborative Fontra server is under construction. Fontra truly is a multi-headed beast, in all the good senses!&lt;/p&gt;
&lt;h3 id=&quot;other-ongoing-work&quot;&gt;Other ongoing work&lt;/h3&gt;
&lt;p&gt;While we can read .glyphs and .glyphspackage data, so far we weren&#39;t able to write these formats. We are working to implement that, so people can edit .glyphs and .glyphspackage files directly with Fontra, without the need for conversion.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Welcome to the Fontra blog! A brief history of the project.</title>
    <link href="https://blog.fontra.xyz/blog/introduction/" />
    <updated>2025-01-29T00:00:00Z</updated>
    <id>https://blog.fontra.xyz/blog/introduction/</id>
    <content type="html">&lt;p&gt;It was long overdue, but here it is – a blog dedicated to Fontra. We will write about new features, work in progress, and future plans. But first: let&#39;s recap what happened previously, and summarize the current state of Fontra.&lt;/p&gt;
&lt;p&gt;We have come a long way, and it has been quite the trip already. The first commit to git was done on 14 November 2021. The initial name for the project was &amp;quot;Trafo&amp;quot;, but on the second day everything got renamed to &amp;quot;Fontra&amp;quot;, after our colleague Fabio Caccamo suggested it.&lt;/p&gt;
&lt;p&gt;Fontra started as a proof of concept. We needed fast live interpolation of (deeply) nested variable components, good support for large character sets (tens of thousands glyphs), and low friction collaboration within a medium-sized (up to 15 designers simultaneously) team. These requirements were informed by ongoing custom CJK (Chinese, Japanese, Korean) type-designs at Black Foundry. We needed new tools for this, and we considered these three options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A new extension for RoboFont (a faster successor to our RoboCJK extension)&lt;/li&gt;
&lt;li&gt;A new cross-platform desktop application (using Qt or wxWidgets)&lt;/li&gt;
&lt;li&gt;A web application + custom server&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We were already using a server with a SQL database to enable smooth collaboration of the team on large scale (CJK) projects), coupled with a RoboFont extension for glyph editing.
A cross-platform solution was to be preferred, and indeed web-browsers are by definition cross-platform, why not build on top of that!&lt;/p&gt;
&lt;p&gt;OpenType 1.8 (2016) brought the Variable Font format to the real world, and type-designers had been drawing with several masters (or sources) for a while already: it seemed important to us that the font editor would take these multiple-masters considerations from its very foundations. In other words: we envisioned a  &amp;quot;variable first&amp;quot; approach to font editing.&lt;/p&gt;
&lt;p&gt;Some informal trials with JavaScript, HTML and CSS quickly had very positive results – both in terms of potential performance, as well as in developer experience. JavaScript has come a long way since the nineties! Additionally, modern web standards are very powerful and remarkably easy to use. It seemed like a solid choice. Just van Rossum’s long experience with coding in the realm of typography (TTX,  FontTools, FontGoggles) helped to develop a vision and architecture for a new, browser-based font editor, even though he had to learn new skills for the web platform.&lt;/p&gt;
&lt;p&gt;We went from cautious first experimental steps to &amp;quot;proper&amp;quot; development rather quickly, since every step along the way confirmed that we were on the right track to achieve our goals.&lt;/p&gt;
&lt;h3 id=&quot;where-are-we-now&quot;&gt;Where are we now?&lt;/h3&gt;
&lt;p&gt;In early 2025, Fontra is a near-feature-complete font editor.&lt;/p&gt;
&lt;p&gt;Highlights include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Create fonts from scratch&lt;/li&gt;
&lt;li&gt;Read and write various font source formats&lt;/li&gt;
&lt;li&gt;Read various binary font formats&lt;/li&gt;
&lt;li&gt;Export (variable) TrueType and OpenType&lt;/li&gt;
&lt;li&gt;Add/delete glyphs&lt;/li&gt;
&lt;li&gt;Draw/modify glyphs&lt;/li&gt;
&lt;li&gt;Strong support for (variable) components&lt;/li&gt;
&lt;li&gt;Live interpolation&lt;/li&gt;
&lt;li&gt;Edit the font&#39;s designspace (variation axes, etc.)&lt;/li&gt;
&lt;li&gt;Perform glyph edits across multiple sources (masters) simultaneously&lt;/li&gt;
&lt;li&gt;A font overview with support for preset and custom glyph sets, powerful grouping options&lt;/li&gt;
&lt;li&gt;Server to collaborate with a team online&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Some stats from our main repository on GitHub:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;541 stars&lt;/li&gt;
&lt;li&gt;17 contributors&lt;/li&gt;
&lt;li&gt;10k+ commits&lt;/li&gt;
&lt;li&gt;1147 closed pull requests&lt;/li&gt;
&lt;li&gt;614 closed issues&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We still have important work left to do, and in this blog we will regularly keep you up to date with the latest developments. Please follow along with our mission to make Fontra an excellent font editor!&lt;/p&gt;
</content>
  </entry>
</feed>